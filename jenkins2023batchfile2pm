def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node{
echo "Job Name is:  ${env.JOB_NAME}"
echo "Node Name is:  ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '5', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

def mavenHome = tool name: 'maven 3.9.3'

Try{

}}//Try Closing

}//Node Closing


//Get the Code from the GitHub Server
stage('CheckoutCode') {
git branch: 'development', credentialsId: '5275dffa-3e40-4549-8436-4895f3620ff8', url: 'https://github.com/wizdom-devopsteam/facebook.git'

}
//Do the Build by Using Maven Build Server
stage('Build'){
//To get the Variable Value
sh "${mavenHome}/bin/mvn clean package"	
}
/*
//Execute the SonarQube Report
stage('ExecuteSonarQubeReport') {
sh "${mavenHome}/bin/mvn sonar:sonar"
}	
//Upload Artifacts into Artifacts Repository 
stage('UploadArtifactsintoNexus') {
sh "${mavenHome}/bin/mvn deploy"	
}
//Deploy Application Into Tomcat Server
stage('DeployApplicationIntoTomcatServe') {	
sshagent(['b43d6517-3d0c-4d1f-998f-664f7218b04c']) {
sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war root@192.168.202.129:/opt/apache-tomcat-9.0.76/webapps/"
}
}
*/
}//Try Closing
  catch(e){
  currentBuild.result = "FAILED"
  }
  finally{

sendSlackNotifications(currentBuild.result)
}
}}//Node Closing
